# .github/workflows/compile-native.yml

name: Compile Native iOS Project (Turbo Modules)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'native-monGARS/ios/**'
      - 'native-monGARS/modules/**'
      - 'native-monGARS/package.json'
      - 'native-monGARS/app.json'
      - 'native-monGARS/patches/**'

jobs:
  compile-ios:
    runs-on: macos-14
    
    defaults:
      run:
        working-directory: ./native-monGARS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js without the built-in cache
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      # *** NEW ROBUST CACHING STEP ***
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: native-monGARS/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('native-monGARS/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies & Apply Patches
        run: |
          # Apply patches first, as they might affect dependency resolution
          npx patch-package
          
          # Use npm ci for faster, more reliable installs with a lockfile
          npm ci

      - name: Verify Critical Dependencies
        run: |
          if [ ! -f "node_modules/react-native/package.json" ]; then
            echo "::error::'react-native' package was not found. 'npm ci' failed."
            exit 1
          fi
          echo "✅ Critical dependencies are present."

      # ... (The rest of the workflow remains the same) ...

      - name: Generate native iOS project
        run: npx expo prebuild --platform ios --no-install --clean

      - name: Modify Podfile to add SentencePiece source
        run: |
          PODFILE_PATH="ios/Podfile"
          {
            echo "source 'https://github.com/google/sentencepiece.git'"
            echo "source 'https://github.com/CocoaPods/Specs.git'"
            cat "$PODFILE_PATH"
          } > "$PODFILE_PATH.tmp" && mv "$PODFILE_PATH.tmp" "$PODFILE_PATH"
          echo "--- Modified Podfile ---"
          cat "$PODFILE_PATH"
          echo "------------------------"

      - name: Set up Ruby and Bundler for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ./native-monGARS/ios

      - name: Install CocoaPods
        run: bundle install
        working-directory: ./native-monGARS/ios

      - name: Run Pod Install
        run: pod install --repo-update
        working-directory: ./native-monGARS/ios
      
      - name: Verify Pod Installation
        run: |
          if [ ! -d "ios/Pods/SentencePiece" ]; then
            echo "::error::'pod install' failed. SentencePiece pod was not found."
            exit 1
          fi
          echo "✅ Pods installed successfully."

      - name: Compile Xcode Project
        run: |
          xcodebuild build -workspace ios/nativemongars.xcworkspace \
            -scheme nativemongars \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro'