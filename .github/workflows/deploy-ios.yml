# .github/workflows/deploy-ios.yml

name: Deploy iOS to TestFlight

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App Version (e.g., 1.0.1)'
        required: true
        type: string
      buildNumber:
        description: 'iOS Build Number (e.g., 2)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Download On-Device Model Artifact
        uses: actions/download-artifact@v4
        with:
          name: on-device-models
          path: ios/native-monGARS/Models
      
      - name: Verify Model Artifacts
        run: |
          echo "Verifying downloaded model artifacts..."
          ls -lR ios/native-monGARS/Models
          if [ ! -d "ios/native-monGARS/Models/LLM.mlmodelc" ]; then
            echo "::error::LLM.mlmodelc not found! Ensure the 'Build On-Device Core ML Model' workflow has run successfully."
            exit 1
          fi

      - name: Set App Version and Build Number
        # This is the critical step to automate versioning.
        # It uses jq to update app.json in place.
        run: |
          echo "Setting app version to ${{ github.event.inputs.version }} and build number to ${{ github.event.inputs.buildNumber }}"
          # Install jq if not present
          sudo apt-get update && sudo apt-get install -y jq
          
          # Update app.json
          jq '.expo.version = "${{ github.event.inputs.version }}" | .expo.ios.buildNumber = "${{ github.event.inputs.buildNumber }}"' app.json > tmp.$$.json && mv tmp.$$.json app.json
          
          echo "Updated app.json:"
          cat app.json

      - name: Build and Submit to TestFlight
        # EAS Build will now use the updated version from app.json
        run: eas build --platform ios --profile release --non-interactive --auto-submit