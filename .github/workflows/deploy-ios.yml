# .github/workflows/deploy-ios.yml

name: Deploy iOS to TestFlight

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App Version (e.g., 1.0.1)'
        required: true
        type: string
      buildNumber:
        description: 'iOS Build Number (e.g., 4)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # *** KEY FIX #1 ***
    # Set the default working directory for all 'run' steps in this job.
    # All commands will now execute inside your React Native project folder.
    defaults:
      run:
        working-directory: ./native-monGARS

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          # Caching now needs to reference the correct package-lock.json
          cache: 'npm'
          cache-dependency-path: native-monGARS/package-lock.json

      - name: Install dependencies
        # This command will now run inside './native-monGARS'
        run: npm ci

      - name: Set up EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Download On-Device Model Artifact
        # This path is relative to the repository root, so it needs the full path.
        uses: actions/download-artifact@v4
        with:
          name: on-device-models
          # *** KEY FIX #2 ***
          # Correct the download path to account for the nested directory.
          path: native-monGARS/ios/native-monGARS/Models
      
      - name: Verify Model Artifacts
        # This command runs inside './native-monGARS' and the path is relative to it.
        run: |
          echo "Verifying downloaded model artifacts..."
          ls -lR ios/native-monGARS/Models
          if [ ! -d "ios/native-monGARS/Models/LLM.mlmodelc" ]; then
            echo "::error::LLM.mlmodelc not found! Ensure the 'Build On-Device Core ML Model' workflow has run successfully."
            exit 1
          fi

      - name: Set App Version and Build Number
        # This command now runs inside './native-monGARS' and will find app.json.
        run: |
          echo "Setting app version to ${{ github.event.inputs.version }} and build number to ${{ github.event.inputs.buildNumber }}"
          sudo apt-get update && sudo apt-get install -y jq
          
          # The 'app.json' file is now in the current working directory.
          jq '.expo.version = "${{ github.event.inputs.version }}" | .expo.ios.buildNumber = "${{ github.event.inputs.buildNumber }}"' app.json > tmp.$$.json && mv tmp.$$.json app.json
          
          echo "Updated app.json:"
          cat app.json

      - name: Build and Submit to TestFlight
        # EAS will find eas.json and app.json in the current working directory.
        run: eas build --platform ios --profile release --non-interactive --auto-submit